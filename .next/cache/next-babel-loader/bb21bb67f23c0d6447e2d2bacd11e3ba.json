{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport PostLink from './PostLink';\n\nconst ArticleList = ({\n  articleIDs\n}) => {\n  const bufferSize = 50; // loads 50 articles at a time\n\n  const {\n    0: currentListIdx,\n    1: setCurrentListIdx\n  } = useState(0);\n  const {\n    0: articles,\n    1: setArticles\n  } = useState([]);\n  const {\n    0: err,\n    1: setErr\n  } = useState(undefined);\n  useEffect(() => {\n    // generic defines the resulting object from resolved promise\n    articleIDs.slice(currentListIdx, currentListIdx + bufferSize).map(id => fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(res => res.json()).then(res => setArticles(prev => [...prev, res])).catch(e => setErr(e.message)));\n  }, [currentListIdx]);\n\n  if (err) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, '--- Error Occurred ---');\n  }\n\n  if (articles.length === 0) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, '--- Loading ---');\n  }\n\n  return __jsx(\"div\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, articles.map(article => __jsx(PostLink, {\n    post: article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setCurrentListIdx(prev => prev + bufferSize),\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Load more...\")), __jsx(_JSXStyle, {\n    id: \"1989883731\",\n    __self: this\n  }, \"h1,a{font-family:'Arial';}ul{padding:0;}li{list-style:none;margin:10px 0;}a{-webkit-text-decoration:none;text-decoration:none;color:blue;}a:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQXJ0aWNsZUxpc3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNDeUIsQUFJK0IsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJkLEVBY0EsSUFWZ0IsSUFSaEIsVUFTQSxvQkFJYSxXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQXJ0aWNsZUxpc3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQb3N0TGluayBmcm9tICcuL1Bvc3RMaW5rJztcbmltcG9ydCB7IFBvc3RUeXBlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5jb25zdCBBcnRpY2xlTGlzdDogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8eyBhcnRpY2xlSURzOiBudW1iZXJbXSB9PiA9ICh7IGFydGljbGVJRHMgfSkgPT4ge1xuICBjb25zdCBidWZmZXJTaXplID0gNTA7IC8vIGxvYWRzIDUwIGFydGljbGVzIGF0IGEgdGltZVxuICBjb25zdCBbY3VycmVudExpc3RJZHgsIHNldEN1cnJlbnRMaXN0SWR4XSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XG4gIGNvbnN0IFthcnRpY2xlcywgc2V0QXJ0aWNsZXNdID0gdXNlU3RhdGU8UG9zdFR5cGVbXT4oW10pO1xuICBjb25zdCBbZXJyLCBzZXRFcnJdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gZ2VuZXJpYyBkZWZpbmVzIHRoZSByZXN1bHRpbmcgb2JqZWN0IGZyb20gcmVzb2x2ZWQgcHJvbWlzZVxuICAgIGFydGljbGVJRHMuc2xpY2UoY3VycmVudExpc3RJZHgsIGN1cnJlbnRMaXN0SWR4ICsgYnVmZmVyU2l6ZSkubWFwKGlkID0+XG4gICAgICBmZXRjaChgaHR0cHM6Ly9oYWNrZXItbmV3cy5maXJlYmFzZWlvLmNvbS92MC9pdGVtLyR7aWR9Lmpzb24/cHJpbnQ9cHJldHR5YClcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC50aGVuKHJlcyA9PiBzZXRBcnRpY2xlcyhwcmV2ID0+IFsuLi5wcmV2LCByZXNdKSlcbiAgICAgICAgLmNhdGNoKGUgPT4gc2V0RXJyKGUubWVzc2FnZSkpXG4gICAgKTtcbiAgfSwgW2N1cnJlbnRMaXN0SWR4XSk7XG5cbiAgaWYgKGVycikge1xuICAgIHJldHVybiA8ZGl2PnsnLS0tIEVycm9yIE9jY3VycmVkIC0tLSd9PC9kaXY+O1xuICB9XG5cbiAgaWYgKGFydGljbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiA8ZGl2PnsnLS0tIExvYWRpbmcgLS0tJ308L2Rpdj47XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8dWw+XG4gICAgICAgIHthcnRpY2xlcy5tYXAoYXJ0aWNsZSA9PiAoXG4gICAgICAgICAgPFBvc3RMaW5rIHBvc3Q9e2FydGljbGV9IC8+XG4gICAgICAgICkpfVxuICAgICAgPC91bD5cbiAgICAgIDxidXR0b24gdHlwZT0nYnV0dG9uJyBvbkNsaWNrPXsoKSA9PiBzZXRDdXJyZW50TGlzdElkeChwcmV2ID0+IHByZXYgKyBidWZmZXJTaXplKX0+XG4gICAgICAgIDxwPkxvYWQgbW9yZS4uLjwvcD5cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgaDEsXG4gICAgICAgIGEge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgdWwge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cblxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDEwcHggMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGEge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXJ0aWNsZUxpc3Q7XG4iXX0= */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx */\"));\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx"],"names":["useState","useEffect","PostLink","ArticleList","articleIDs","bufferSize","currentListIdx","setCurrentListIdx","articles","setArticles","err","setErr","undefined","slice","map","id","fetch","then","res","json","prev","catch","e","message","length","article"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,WAA8D,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzF,QAAMC,UAAU,GAAG,EAAnB,CADyF,CAClE;;AACvB,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCP,QAAQ,CAAS,CAAT,CAApD;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAa,EAAb,CAAxC;AACA,QAAM;AAAA,OAACU,GAAD;AAAA,OAAMC;AAAN,MAAgBX,QAAQ,CAAqBY,SAArB,CAA9B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,UAAU,CAACS,KAAX,CAAiBP,cAAjB,EAAiCA,cAAc,GAAGD,UAAlD,EAA8DS,GAA9D,CAAkEC,EAAE,IAClEC,KAAK,CAAE,8CAA6CD,EAAG,oBAAlD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIT,WAAW,CAACW,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUF,GAAV,CAAT,CAF1B,EAGGG,KAHH,CAGSC,CAAC,IAAIX,MAAM,CAACW,CAAC,CAACC,OAAH,CAHpB,CADF;AAMD,GARQ,EAQN,CAACjB,cAAD,CARM,CAAT;;AAUA,MAAII,GAAJ,EAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,wBAAN,CAAP;AACD;;AAED,MAAIF,QAAQ,CAACgB,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,iBAAN,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,QAAQ,CAACM,GAAT,CAAaW,OAAO,IACnB,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,EAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMlB,iBAAiB,CAACa,IAAI,IAAIA,IAAI,GAAGf,UAAhB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF;AAAA;AAAA;AAAA,2/FADF;AAoCD,CA5DD;;AA8DA,eAAeF,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport PostLink from './PostLink';\nimport { PostType } from '../types';\n\nconst ArticleList: React.FunctionComponent<{ articleIDs: number[] }> = ({ articleIDs }) => {\n  const bufferSize = 50; // loads 50 articles at a time\n  const [currentListIdx, setCurrentListIdx] = useState<number>(0);\n  const [articles, setArticles] = useState<PostType[]>([]);\n  const [err, setErr] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    // generic defines the resulting object from resolved promise\n    articleIDs.slice(currentListIdx, currentListIdx + bufferSize).map(id =>\n      fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n        .then(res => res.json())\n        .then(res => setArticles(prev => [...prev, res]))\n        .catch(e => setErr(e.message))\n    );\n  }, [currentListIdx]);\n\n  if (err) {\n    return <div>{'--- Error Occurred ---'}</div>;\n  }\n\n  if (articles.length === 0) {\n    return <div>{'--- Loading ---'}</div>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {articles.map(article => (\n          <PostLink post={article} />\n        ))}\n      </ul>\n      <button type='button' onClick={() => setCurrentListIdx(prev => prev + bufferSize)}>\n        <p>Load more...</p>\n      </button>\n      <style jsx global>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 10px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}