{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useEffect, useState } from 'react';\nimport CommentSection from './CommentSection';\n\nconst Comment = props => {\n  const {\n    commentId\n  } = props;\n  const {\n    0: comment,\n    1: setComment\n  } = useState(undefined);\n  const {\n    0: err,\n    1: setErr\n  } = useState(undefined);\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`).then(res => res.json()).then(res => setComment(res)).catch(e => setErr(e.message));\n  });\n\n  if (err) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Err message: \", err));\n  }\n\n  if (!comment) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"- Loading -\"));\n  }\n\n  return __jsx(\"li\", {\n    className: \"jsx-2515292747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"jsx-2515292747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, comment.by), __jsx(\"p\", {\n    className: \"jsx-2515292747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, comment.text), comment.kids.length > 0 && __jsx(CommentSection, {\n    collapsibleName: \"Replies\",\n    commentIDs: comment.kids,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"2515292747\",\n    __self: this\n  }, \"div.jsx-2515292747{font-family:'Arial';}li.jsx-2515292747{list-style:none;margin:5px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQ29tbWVudC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOENrQixBQUcrQixBQUdKLGdCQUNILElBSGYsU0FJQSIsImZpbGUiOiIvVXNlcnMvZGFuaWVsY2VuZGVyL0RvY3VtZW50cy9HaXRIdWIvbmV4dC10cy9jb21wb25lbnRzL0NvbW1lbnQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgeyBDb21tZW50VHlwZSB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29tbWVudFNlY3Rpb24gZnJvbSAnLi9Db21tZW50U2VjdGlvbic7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNvbW1lbnRJZDogbnVtYmVyO1xufTtcblxuY29uc3QgQ29tbWVudDogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gcHJvcHMgPT4ge1xuICBjb25zdCB7IGNvbW1lbnRJZCB9ID0gcHJvcHM7XG5cbiAgY29uc3QgW2NvbW1lbnQsIHNldENvbW1lbnRdID0gdXNlU3RhdGU8Q29tbWVudFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbiAgY29uc3QgW2Vyciwgc2V0RXJyXSA9IHVzZVN0YXRlPHN0cmluZyB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoKGBodHRwczovL2hhY2tlci1uZXdzLmZpcmViYXNlaW8uY29tL3YwL2l0ZW0vJHtjb21tZW50SWR9Lmpzb24/cHJpbnQ9cHJldHR5YClcbiAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgLnRoZW4ocmVzID0+IHNldENvbW1lbnQocmVzKSlcbiAgICAgIC5jYXRjaChlID0+IHNldEVycihlLm1lc3NhZ2UpKTtcbiAgfSk7XG5cbiAgaWYgKGVycikge1xuICAgIHJldHVybiAoXG4gICAgICA8bGk+XG4gICAgICAgIDxwPkVyciBtZXNzYWdlOiB7ZXJyfTwvcD5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfVxuXG4gIGlmICghY29tbWVudCkge1xuICAgIHJldHVybiAoXG4gICAgICA8bGk+XG4gICAgICAgIDxwPi0gTG9hZGluZyAtPC9wPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8bGk+XG4gICAgICA8aDQ+e2NvbW1lbnQuYnl9PC9oND5cbiAgICAgIDxwPntjb21tZW50LnRleHR9PC9wPlxuICAgICAge2NvbW1lbnQua2lkcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgPENvbW1lbnRTZWN0aW9uIGNvbGxhcHNpYmxlTmFtZT0nUmVwbGllcycgY29tbWVudElEcz17Y29tbWVudC5raWRzfSAvPlxuICAgICAgKX1cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgZGl2IHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDVweCAwO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9saT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbW1lbnQ7XG4iXX0= */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx */\"));\n};\n\nexport default Comment;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx"],"names":["fetch","useEffect","useState","CommentSection","Comment","props","commentId","comment","setComment","undefined","err","setErr","then","res","json","catch","e","message","by","text","kids","length"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAMA,MAAMC,OAAuC,GAAGC,KAAK,IAAI;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAM;AAAA,OAACE,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAA0BO,SAA1B,CAAtC;AAEA,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBT,QAAQ,CAAqBO,SAArB,CAA9B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAAE,8CAA6CM,SAAU,oBAAzD,CAAL,CACGM,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIL,UAAU,CAACK,GAAD,CAFzB,EAGGE,KAHH,CAGSC,CAAC,IAAIL,MAAM,CAACK,CAAC,CAACC,OAAH,CAHpB;AAID,GALQ,CAAT;;AAOA,MAAIP,GAAJ,EAAS;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBA,GAAjB,CADF,CADF;AAKD;;AAED,MAAI,CAACH,OAAL,EAAc;AACZ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACW,EAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,OAAO,CAACY,IAAZ,CAFF,EAGGZ,OAAO,CAACa,IAAR,CAAaC,MAAb,GAAsB,CAAtB,IACC,MAAC,cAAD;AAAgB,IAAA,eAAe,EAAC,SAAhC;AAA0C,IAAA,UAAU,EAAEd,OAAO,CAACa,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAAA;AAAA;AAAA,wzEADF;AAkBD,CAhDD;;AAkDA,eAAehB,OAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { CommentType } from '../types';\nimport { useEffect, useState } from 'react';\nimport CommentSection from './CommentSection';\n\ntype Props = {\n  commentId: number;\n};\n\nconst Comment: React.FunctionComponent<Props> = props => {\n  const { commentId } = props;\n\n  const [comment, setComment] = useState<CommentType | undefined>(undefined);\n\n  const [err, setErr] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`)\n      .then(res => res.json())\n      .then(res => setComment(res))\n      .catch(e => setErr(e.message));\n  });\n\n  if (err) {\n    return (\n      <li>\n        <p>Err message: {err}</p>\n      </li>\n    );\n  }\n\n  if (!comment) {\n    return (\n      <li>\n        <p>- Loading -</p>\n      </li>\n    );\n  }\n\n  return (\n    <li>\n      <h4>{comment.by}</h4>\n      <p>{comment.text}</p>\n      {comment.kids.length > 0 && (\n        <CommentSection collapsibleName='Replies' commentIDs={comment.kids} />\n      )}\n      <style jsx>{`\n        div {\n          font-family: 'Arial';\n        }\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n      `}</style>\n    </li>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}