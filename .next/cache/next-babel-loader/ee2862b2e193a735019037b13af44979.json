{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\n\nconst PostLink = ({\n  post\n}) => __jsx(\"li\", {\n  key: post.id,\n  className: \"jsx-1341333550\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${post.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-1341333550\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, post.title, post.text && ` - Text Embedded`)), __jsx(_JSXStyle, {\n  id: \"1341333550\",\n  __self: this\n}, \"li.jsx-1341333550{list-style:none;margin:5px 0;}a.jsx-1341333550{-webkit-text-decoration:none;text-decoration:none;color:blue;font-family:'Arial';}a.jsx-1341333550:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQXJ0aWNsZUxpc3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVlnQixBQUd5QixBQUtLLEFBTVQsWUFDZCxJQVhlLGFBQ2YscUJBSWEsV0FDUyxvQkFDdEIiLCJmaWxlIjoiL1VzZXJzL2RhbmllbGNlbmRlci9Eb2N1bWVudHMvR2l0SHViL25leHQtdHMvY29tcG9uZW50cy9BcnRpY2xlTGlzdC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCB7IFBvc3RUeXBlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5jb25zdCBQb3N0TGluazogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8eyBwb3N0OiBQb3N0VHlwZSB9PiA9ICh7IHBvc3QgfSkgPT4gKFxuICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICA8TGluayBocmVmPScvcC9baWRdJyBhcz17YC9wLyR7cG9zdC5pZH1gfT5cbiAgICAgIDxhPlxuICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAge3Bvc3QudGV4dCAmJiBgIC0gVGV4dCBFbWJlZGRlZGB9XG4gICAgICA8L2E+XG4gICAgPC9MaW5rPlxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgfVxuXG4gICAgICBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9saT5cbik7XG5cbmNvbnN0IEFydGljbGVMaXN0OiBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDx7IGFydGljbGVJRHM6IG51bWJlcltdIH0+ID0gcHJvcHMgPT4ge1xuICBjb25zdCBidWZmZXJTaXplID0gNTA7IC8vIGxvYWRzIDUwIGFydGljbGVzIGF0IGEgdGltZVxuICBjb25zdCB7IGFydGljbGVJRHMgfSA9IHByb3BzO1xuICBjb25zdCBbY3VycmVudExpc3RJZHgsIHNldEN1cnJlbnRMaXN0SWR4XSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XG4gIC8vYXJ0aWNsZUlEcy5sZW5ndGggPj0gYnVmZmVyU2l6ZSA/IGJ1ZmZlclNpemUgOiBhcnRpY2xlSURzLmxlbmd0aFxuXG4gIGNvbnN0IFthcnRpY2xlcywgc2V0QXJ0aWNsZXNdID0gdXNlU3RhdGU8UG9zdFR5cGVbXT4oW10pO1xuICBjb25zdCBbZXJyLCBzZXRFcnJdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gZ2VuZXJpYyBkZWZpbmVzIHRoZSByZXN1bHRpbmcgb2JqZWN0IGZyb20gcmVzb2x2ZWQgcHJvbWlzZVxuICAgIGFydGljbGVJRHMuc2xpY2UoY3VycmVudExpc3RJZHgsIGN1cnJlbnRMaXN0SWR4ICsgYnVmZmVyU2l6ZSkubWFwKGlkID0+XG4gICAgICBmZXRjaChgaHR0cHM6Ly9oYWNrZXItbmV3cy5maXJlYmFzZWlvLmNvbS92MC9pdGVtLyR7aWR9Lmpzb24/cHJpbnQ9cHJldHR5YClcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICBzZXRBcnRpY2xlcyhwcmV2ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbLi4ucHJldiwgcmVzXTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGUgPT4gc2V0RXJyKGUubWVzc2FnZSkpXG4gICAgKTtcbiAgfSwgW2N1cnJlbnRMaXN0SWR4XSk7XG5cbiAgaWYgKGVycikge1xuICAgIHJldHVybiA8ZGl2PnsnLS0tIEVycm9yIE9jY3VycmVkIC0tLSd9PC9kaXY+O1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPHVsPlxuICAgICAgICB7YXJ0aWNsZXMubWFwKGFydGljbGUgPT4gKFxuICAgICAgICAgIDxQb3N0TGluayBwb3N0PXthcnRpY2xlfSAvPlxuICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgICA8YnV0dG9uIHR5cGU9J2J1dHRvbicgb25DbGljaz17KCkgPT4gc2V0Q3VycmVudExpc3RJZHgocHJldiA9PiBwcmV2ICsgYnVmZmVyU2l6ZSl9PlxuICAgICAgICA8cD5Mb2FkIG1vcmUuLi48L3A+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIGgxLFxuICAgICAgICBhIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuXG4gICAgICAgIHVsIHtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFydGljbGVMaXN0O1xuIl19 */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx */\"));\n\nconst ArticleList = props => {\n  const bufferSize = 50; // loads 50 articles at a time\n\n  const {\n    articleIDs\n  } = props;\n  const {\n    0: currentListIdx,\n    1: setCurrentListIdx\n  } = useState(0); //articleIDs.length >= bufferSize ? bufferSize : articleIDs.length\n\n  const {\n    0: articles,\n    1: setArticles\n  } = useState([]);\n  const {\n    0: err,\n    1: setErr\n  } = useState(undefined);\n  useEffect(() => {\n    // generic defines the resulting object from resolved promise\n    articleIDs.slice(currentListIdx, currentListIdx + bufferSize).map(id => fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(res => res.json()).then(res => {\n      console.log(res);\n      setArticles(prev => {\n        return [...prev, res];\n      });\n    }).catch(e => setErr(e.message)));\n  }, [currentListIdx]);\n\n  if (err) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, '--- Error Occurred ---');\n  }\n\n  return __jsx(\"div\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, articles.map(article => __jsx(PostLink, {\n    post: article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setCurrentListIdx(prev => prev + bufferSize),\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Load more...\")), __jsx(_JSXStyle, {\n    id: \"1989883731\",\n    __self: this\n  }, \"h1,a{font-family:'Arial';}ul{padding:0;}li{list-style:none;margin:10px 0;}a{-webkit-text-decoration:none;text-decoration:none;color:blue;}a:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQXJ0aWNsZUxpc3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFFeUIsQUFJK0IsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJkLEVBY0EsSUFWZ0IsSUFSaEIsVUFTQSxvQkFJYSxXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQXJ0aWNsZUxpc3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgeyBQb3N0VHlwZSB9IGZyb20gJy4uL3R5cGVzJztcblxuY29uc3QgUG9zdExpbms6IFJlYWN0LkZ1bmN0aW9uQ29tcG9uZW50PHsgcG9zdDogUG9zdFR5cGUgfT4gPSAoeyBwb3N0IH0pID0+IChcbiAgPGxpIGtleT17cG9zdC5pZH0+XG4gICAgPExpbmsgaHJlZj0nL3AvW2lkXScgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4gICAgICA8YT5cbiAgICAgICAge3Bvc3QudGl0bGV9XG4gICAgICAgIHtwb3N0LnRleHQgJiYgYCAtIFRleHQgRW1iZWRkZWRgfVxuICAgICAgPC9hPlxuICAgIDwvTGluaz5cbiAgICA8c3R5bGUganN4PntgXG4gICAgICBsaSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogNXB4IDA7XG4gICAgICB9XG5cbiAgICAgIGEge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgIH1cblxuICAgICAgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gIDwvbGk+XG4pO1xuXG5jb25zdCBBcnRpY2xlTGlzdDogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8eyBhcnRpY2xlSURzOiBudW1iZXJbXSB9PiA9IHByb3BzID0+IHtcbiAgY29uc3QgYnVmZmVyU2l6ZSA9IDUwOyAvLyBsb2FkcyA1MCBhcnRpY2xlcyBhdCBhIHRpbWVcbiAgY29uc3QgeyBhcnRpY2xlSURzIH0gPSBwcm9wcztcbiAgY29uc3QgW2N1cnJlbnRMaXN0SWR4LCBzZXRDdXJyZW50TGlzdElkeF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICAvL2FydGljbGVJRHMubGVuZ3RoID49IGJ1ZmZlclNpemUgPyBidWZmZXJTaXplIDogYXJ0aWNsZUlEcy5sZW5ndGhcblxuICBjb25zdCBbYXJ0aWNsZXMsIHNldEFydGljbGVzXSA9IHVzZVN0YXRlPFBvc3RUeXBlW10+KFtdKTtcbiAgY29uc3QgW2Vyciwgc2V0RXJyXSA9IHVzZVN0YXRlPHN0cmluZyB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIGdlbmVyaWMgZGVmaW5lcyB0aGUgcmVzdWx0aW5nIG9iamVjdCBmcm9tIHJlc29sdmVkIHByb21pc2VcbiAgICBhcnRpY2xlSURzLnNsaWNlKGN1cnJlbnRMaXN0SWR4LCBjdXJyZW50TGlzdElkeCArIGJ1ZmZlclNpemUpLm1hcChpZCA9PlxuICAgICAgZmV0Y2goYGh0dHBzOi8vaGFja2VyLW5ld3MuZmlyZWJhc2Vpby5jb20vdjAvaXRlbS8ke2lkfS5qc29uP3ByaW50PXByZXR0eWApXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgc2V0QXJ0aWNsZXMocHJldiA9PiB7XG4gICAgICAgICAgICByZXR1cm4gWy4uLnByZXYsIHJlc107XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlID0+IHNldEVycihlLm1lc3NhZ2UpKVxuICAgICk7XG4gIH0sIFtjdXJyZW50TGlzdElkeF0pO1xuXG4gIGlmIChlcnIpIHtcbiAgICByZXR1cm4gPGRpdj57Jy0tLSBFcnJvciBPY2N1cnJlZCAtLS0nfTwvZGl2PjtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDx1bD5cbiAgICAgICAge2FydGljbGVzLm1hcChhcnRpY2xlID0+IChcbiAgICAgICAgICA8UG9zdExpbmsgcG9zdD17YXJ0aWNsZX0gLz5cbiAgICAgICAgKSl9XG4gICAgICA8L3VsPlxuICAgICAgPGJ1dHRvbiB0eXBlPSdidXR0b24nIG9uQ2xpY2s9eygpID0+IHNldEN1cnJlbnRMaXN0SWR4KHByZXYgPT4gcHJldiArIGJ1ZmZlclNpemUpfT5cbiAgICAgICAgPHA+TG9hZCBtb3JlLi4uPC9wPlxuICAgICAgPC9idXR0b24+XG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBoMSxcbiAgICAgICAgYSB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gICAgICAgIH1cblxuICAgICAgICB1bCB7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgYTpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcnRpY2xlTGlzdDtcbiJdfQ== */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx */\"));\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/components/ArticleList.tsx"],"names":["useState","useEffect","Link","PostLink","post","id","title","text","ArticleList","props","bufferSize","articleIDs","currentListIdx","setCurrentListIdx","articles","setArticles","err","setErr","undefined","slice","map","fetch","then","res","json","console","log","prev","catch","e","message","article"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,QAAqD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC5D;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IAAI,CAACE,KADR,EAEGF,IAAI,CAACG,IAAL,IAAc,kBAFjB,CADF,CADF;AAAA;AAAA;AAAA,6zHADF;;AA2BA,MAAMC,WAA8D,GAAGC,KAAK,IAAI;AAC9E,QAAMC,UAAU,GAAG,EAAnB,CAD8E,CACvD;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAiBF,KAAvB;AACA,QAAM;AAAA,OAACG,cAAD;AAAA,OAAiBC;AAAjB,MAAsCb,QAAQ,CAAS,CAAT,CAApD,CAH8E,CAI9E;;AAEA,QAAM;AAAA,OAACc,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAAa,EAAb,CAAxC;AACA,QAAM;AAAA,OAACgB,GAAD;AAAA,OAAMC;AAAN,MAAgBjB,QAAQ,CAAqBkB,SAArB,CAA9B;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,UAAU,CAACQ,KAAX,CAAiBP,cAAjB,EAAiCA,cAAc,GAAGF,UAAlD,EAA8DU,GAA9D,CAAkEf,EAAE,IAClEgB,KAAK,CAAE,8CAA6ChB,EAAG,oBAAlD,CAAL,CACGiB,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAR,MAAAA,WAAW,CAACY,IAAI,IAAI;AAClB,eAAO,CAAC,GAAGA,IAAJ,EAAUJ,GAAV,CAAP;AACD,OAFU,CAAX;AAGD,KAPH,EAQGK,KARH,CAQSC,CAAC,IAAIZ,MAAM,CAACY,CAAC,CAACC,OAAH,CARpB,CADF;AAWD,GAbQ,EAaN,CAAClB,cAAD,CAbM,CAAT;;AAeA,MAAII,GAAJ,EAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,wBAAN,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACM,GAAT,CAAaW,OAAO,IACnB,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,EAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMlB,iBAAiB,CAACc,IAAI,IAAIA,IAAI,GAAGjB,UAAhB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF;AAAA;AAAA;AAAA,+zHADF;AAoCD,CAhED;;AAkEA,eAAeF,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { PostType } from '../types';\n\nconst PostLink: React.FunctionComponent<{ post: PostType }> = ({ post }) => (\n  <li key={post.id}>\n    <Link href='/p/[id]' as={`/p/${post.id}`}>\n      <a>\n        {post.title}\n        {post.text && ` - Text Embedded`}\n      </a>\n    </Link>\n    <style jsx>{`\n      li {\n        list-style: none;\n        margin: 5px 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: blue;\n        font-family: 'Arial';\n      }\n\n      a:hover {\n        opacity: 0.6;\n      }\n    `}</style>\n  </li>\n);\n\nconst ArticleList: React.FunctionComponent<{ articleIDs: number[] }> = props => {\n  const bufferSize = 50; // loads 50 articles at a time\n  const { articleIDs } = props;\n  const [currentListIdx, setCurrentListIdx] = useState<number>(0);\n  //articleIDs.length >= bufferSize ? bufferSize : articleIDs.length\n\n  const [articles, setArticles] = useState<PostType[]>([]);\n  const [err, setErr] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    // generic defines the resulting object from resolved promise\n    articleIDs.slice(currentListIdx, currentListIdx + bufferSize).map(id =>\n      fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res);\n          setArticles(prev => {\n            return [...prev, res];\n          });\n        })\n        .catch(e => setErr(e.message))\n    );\n  }, [currentListIdx]);\n\n  if (err) {\n    return <div>{'--- Error Occurred ---'}</div>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {articles.map(article => (\n          <PostLink post={article} />\n        ))}\n      </ul>\n      <button type='button' onClick={() => setCurrentListIdx(prev => prev + bufferSize)}>\n        <p>Load more...</p>\n      </button>\n      <style jsx global>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 10px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}