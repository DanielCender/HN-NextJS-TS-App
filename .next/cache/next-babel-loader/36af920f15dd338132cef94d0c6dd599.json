{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown/with-html';\nimport Layout from '../../components/MyLayout.js';\n\nconst Post = props => {\n  const {\n    article\n  } = props;\n  console.log(article);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, article.title), __jsx(\"h2\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Author: \", article.by), __jsx(\"h3\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Score: \", article.score), __jsx(\"h3\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Link:\", ' ', __jsx(\"a\", {\n    href: `${article.url}`,\n    target: \"_blank\",\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, article.url)), article.text !== undefined && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Post:\"), __jsx(Markdown, {\n    source: article.text,\n    escapeHtml: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2647703310\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5QnlCLEFBRytCLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKWixPQUsyQixDQWQzQix3QkFlQSxNQVhhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2RhbmllbGNlbmRlci9Eb2N1bWVudHMvR2l0SHViL25leHQtdHMvcGFnZXMvcC9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duL3dpdGgtaHRtbCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnO1xuXG5jb25zdCBQb3N0ID0gcHJvcHMgPT4ge1xuICBjb25zdCB7IGFydGljbGUgfSA9IHByb3BzO1xuICBjb25zb2xlLmxvZyhhcnRpY2xlKTtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGgxPnthcnRpY2xlLnRpdGxlfTwvaDE+XG4gICAgICA8aDI+QXV0aG9yOiB7YXJ0aWNsZS5ieX08L2gyPlxuICAgICAgPGgzPlNjb3JlOiB7YXJ0aWNsZS5zY29yZX08L2gzPlxuICAgICAgPGgzPlxuICAgICAgICBMaW5rOnsnICd9XG4gICAgICAgIDxhIGhyZWY9e2Ake2FydGljbGUudXJsfWB9IHRhcmdldD0nX2JsYW5rJz5cbiAgICAgICAgICB7YXJ0aWNsZS51cmx9XG4gICAgICAgIDwvYT5cbiAgICAgIDwvaDM+XG4gICAgICB7YXJ0aWNsZS50ZXh0ICE9PSB1bmRlZmluZWQgJiYgKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgPGgzPlBvc3Q6PC9oMz5cbiAgICAgICAgICA8TWFya2Rvd24gc291cmNlPXthcnRpY2xlLnRleHR9IGVzY2FwZUh0bWw9e2ZhbHNlfSAvPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgKX1cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIC5tYXJrZG93biB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIGE6aG92ZXIge1xuICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBoMyB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuUG9zdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBjb250ZXh0ID0+IHtcbiAgY29uc3QgeyBpZCB9ID0gY29udGV4dC5xdWVyeTtcbiAgY29uc29sZS5sb2coaWQpO1xuICBjb25zdCBhcnRpY2xlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vaGFja2VyLW5ld3MuZmlyZWJhc2Vpby5jb20vdjAvaXRlbS8ke2lkfS5qc29uP3ByaW50PXByZXR0eWApXG4gICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgLmNhdGNoKGUgPT4gY29uc29sZS5sb2coZSkpO1xuICByZXR1cm4ge1xuICAgIGFydGljbGVcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7XG5cbi8vIGltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xuLy8gaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duL3dpdGgtaHRtbCdcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dCdcblxuLy8gZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuLy8gICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuLy8gICByZXR1cm4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICA8aDE+e3JvdXRlci5xdWVyeS5pZH08L2gxPlxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZG93blwiPlxuLy8gICAgICAgICA8TWFya2Rvd25cbi8vICAgICAgICAgICBzb3VyY2U9e2Bcbi8vIFRoaXMgaXMgb3VyIGJsb2cgcG9zdC5cbi8vIFllcy4gV2UgY2FuIGhhdmUgYSBbbGlua10oL2xpbmspLlxuLy8gQW5kIHdlIGNhbiBoYXZlIGEgdGl0bGUgYXMgd2VsbC5cblxuLy8gIyMjIFRoaXMgaXMgYSB0aXRsZVxuXG4vLyBBbmQgaGVyZSdzIHRoZSBjb250ZW50LlxuLy8gICAgICAgYH1cbi8vICAgICAgICAgICBlc2NhcGVIdG1sPXtmYWxzZX1cbi8vICAgICAgICAgLz5cbi8vICAgICAgIDwvZGl2PlxuLy8gICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2Bcbi8vICAgICAgICAgLm1hcmtkb3duIHtcbi8vICAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIC5tYXJrZG93biBhIHtcbi8vICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4vLyAgICAgICAgICAgY29sb3I6IGJsdWU7XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICAubWFya2Rvd24gYTpob3ZlciB7XG4vLyAgICAgICAgICAgb3BhY2l0eTogMC42O1xuLy8gICAgICAgICB9XG5cbi8vICAgICAgICAgLm1hcmtkb3duIGgzIHtcbi8vICAgICAgICAgICBtYXJnaW46IDA7XG4vLyAgICAgICAgICAgcGFkZGluZzogMDtcbi8vICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfTwvc3R5bGU+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyAgIClcbi8vIH1cbiJdfQ== */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/pages/p/[id].js */\"));\n};\n\nPost.getInitialProps = async context => {\n  const {\n    id\n  } = context.query;\n  console.log(id);\n  const article = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(res => res.json()).catch(e => console.log(e));\n  return {\n    article\n  };\n};\n\nexport default Post; // import { useRouter } from 'next/router'\n// import Markdown from 'react-markdown/with-html'\n// import Layout from '../../components/MyLayout'\n// export default () => {\n//   const router = useRouter()\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <div className=\"markdown\">\n//         <Markdown\n//           source={`\n// This is our blog post.\n// Yes. We can have a [link](/link).\n// And we can have a title as well.\n// ### This is a title\n// And here's the content.\n//       `}\n//           escapeHtml={false}\n//         />\n//       </div>\n//       <style jsx global>{`\n//         .markdown {\n//           font-family: 'Arial';\n//         }\n//         .markdown a {\n//           text-decoration: none;\n//           color: blue;\n//         }\n//         .markdown a:hover {\n//           opacity: 0.6;\n//         }\n//         .markdown h3 {\n//           margin: 0;\n//           padding: 0;\n//           text-transform: uppercase;\n//         }\n//       `}</style>\n//     </Layout>\n//   )\n// }","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/pages/p/[id].js"],"names":["React","fetch","Markdown","Layout","Post","props","article","console","log","title","by","score","url","text","undefined","getInitialProps","context","id","query","then","res","json","catch","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACG,KAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaH,OAAO,CAACI,EAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYJ,OAAO,CAACK,KAApB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQ,GADR,EAEE;AAAG,IAAA,IAAI,EAAG,GAAEL,OAAO,CAACM,GAAI,EAAxB;AAA2B,IAAA,MAAM,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAACM,GADX,CAFF,CAJF,EAUGN,OAAO,CAACO,IAAR,KAAiBC,SAAjB,IACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAER,OAAO,CAACO,IAA1B;AAAgC,IAAA,UAAU,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXJ;AAAA;AAAA;AAAA,2/HADF;AAuCD,CA1CD;;AA4CAT,IAAI,CAACW,eAAL,GAAuB,MAAMC,OAAN,IAAiB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYS,EAAZ;AACA,QAAMX,OAAO,GAAG,MAAML,KAAK,CAAE,8CAA6CgB,EAAG,oBAAlD,CAAL,CACnBE,IADmB,CACdC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADO,EAEnBC,KAFmB,CAEbC,CAAC,IAAIhB,OAAO,CAACC,GAAR,CAAYe,CAAZ,CAFQ,CAAtB;AAGA,SAAO;AACLjB,IAAAA;AADK,GAAP;AAGD,CATD;;AAWA,eAAeF,IAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown/with-html';\nimport Layout from '../../components/MyLayout.js';\n\nconst Post = props => {\n  const { article } = props;\n  console.log(article);\n  return (\n    <Layout>\n      <h1>{article.title}</h1>\n      <h2>Author: {article.by}</h2>\n      <h3>Score: {article.score}</h3>\n      <h3>\n        Link:{' '}\n        <a href={`${article.url}`} target='_blank'>\n          {article.url}\n        </a>\n      </h3>\n      {article.text !== undefined && (\n        <React.Fragment>\n          <h3>Post:</h3>\n          <Markdown source={article.text} escapeHtml={false} />\n        </React.Fragment>\n      )}\n      <style jsx global>{`\n        .markdown {\n          font-family: 'Arial';\n        }\n\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async context => {\n  const { id } = context.query;\n  console.log(id);\n  const article = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n    .then(res => res.json())\n    .catch(e => console.log(e));\n  return {\n    article\n  };\n};\n\nexport default Post;\n\n// import { useRouter } from 'next/router'\n// import Markdown from 'react-markdown/with-html'\n// import Layout from '../../components/MyLayout'\n\n// export default () => {\n//   const router = useRouter()\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <div className=\"markdown\">\n//         <Markdown\n//           source={`\n// This is our blog post.\n// Yes. We can have a [link](/link).\n// And we can have a title as well.\n\n// ### This is a title\n\n// And here's the content.\n//       `}\n//           escapeHtml={false}\n//         />\n//       </div>\n//       <style jsx global>{`\n//         .markdown {\n//           font-family: 'Arial';\n//         }\n\n//         .markdown a {\n//           text-decoration: none;\n//           color: blue;\n//         }\n\n//         .markdown a:hover {\n//           opacity: 0.6;\n//         }\n\n//         .markdown h3 {\n//           margin: 0;\n//           padding: 0;\n//           text-transform: uppercase;\n//         }\n//       `}</style>\n//     </Layout>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}