{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/pages/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar PostLink = function PostLink(_ref) {\n  var post = _ref.post;\n  return __jsx(\"li\", {\n    key: post.id,\n    className: \"jsx-1341333550\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(post.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-1341333550\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, post.title, post.text && \" - Text Embedded\")), __jsx(_JSXStyle, {\n    id: \"1341333550\",\n    __self: this\n  }, \"li{list-style:none;margin:5px 0;}a{-webkit-text-decoration:none;text-decoration:none;color:blue;font-family:'Arial';}a:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL3BhZ2VzL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjdUIsQUFHeUIsQUFLSyxBQU1ULFlBQ2QsSUFYZSxhQUNmLHFCQUlhLFdBQ1Msb0JBQ3RCIiwiZmlsZSI6Ii9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL3BhZ2VzL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9NeUxheW91dC5qcyc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgeyBOZXh0UGFnZSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IHsgUG9zdFR5cGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmNvbnN0IFBvc3RMaW5rOiBOZXh0UGFnZTx7IHBvc3Q6IFBvc3RUeXBlIH0+ID0gKHsgcG9zdCB9KSA9PiAoXG4gIDxsaSBrZXk9e3Bvc3QuaWR9PlxuICAgIDxMaW5rIGhyZWY9Jy9wL1tpZF0nIGFzPXtgL3AvJHtwb3N0LmlkfWB9PlxuICAgICAgPGE+XG4gICAgICAgIHtwb3N0LnRpdGxlfVxuICAgICAgICB7cG9zdC50ZXh0ICYmIGAgLSBUZXh0IEVtYmVkZGVkYH1cbiAgICAgIDwvYT5cbiAgICA8L0xpbms+XG4gICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgIGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgfVxuXG4gICAgICBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9saT5cbik7XG5cbmNvbnN0IEluZGV4OiBOZXh0UGFnZTx7IGFydGljbGVzOiBQb3N0VHlwZVtdIH0+ID0gcHJvcHMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+SGFja2VyIE5ld3M8L2gxPlxuICAgICAgPHVsPlxuICAgICAgICB7cHJvcHMuYXJ0aWNsZXMubWFwKGFydGljbGUgPT4gKFxuICAgICAgICAgIDxQb3N0TGluayBwb3N0PXthcnRpY2xlfSAvPlxuICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGgxLFxuICAgICAgICBhIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuXG4gICAgICAgIHVsIHtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vaGFja2VyLW5ld3MuZmlyZWJhc2Vpby5jb20vdjAvdG9wc3Rvcmllcy5qc29uP3ByaW50PXByZXR0eScpO1xuXG4gIGNvbnN0IGRhdGE6IHN0cmluZ1tdID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICBjb25zb2xlLmxvZyhkYXRhLmxlbmd0aCk7XG5cbiAgLy8gZ2VuZXJpYyBkZWZpbmVzIHRoZSByZXN1bHRpbmcgb2JqZWN0IGZyb20gcmVzb2x2ZWQgcHJvbWlzZVxuICBjb25zdCBwb3N0czogUHJvbWlzZTxQb3N0VHlwZT5bXSA9IFtdO1xuXG4gIGRhdGEubWFwKGlkID0+XG4gICAgcG9zdHMucHVzaChcbiAgICAgIGZldGNoKGBodHRwczovL2hhY2tlci1uZXdzLmZpcmViYXNlaW8uY29tL3YwL2l0ZW0vJHtpZH0uanNvbj9wcmludD1wcmV0dHlgKVxuICAgICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgLmNhdGNoKGUgPT4gY29uc29sZS5sb2coZSkpXG4gICAgKVxuICApO1xuXG4gIGNvbnN0IHJlc3VsdDogUG9zdFR5cGVbXSA9IGF3YWl0IFByb21pc2UuYWxsKHBvc3RzKTtcblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihcbiAgICB7fSxcbiAgICB7XG4gICAgICBhcnRpY2xlczogcmVzdWx0LmZpbHRlcihlID0+IHR5cGVvZiBlID09PSAnb2JqZWN0JylcbiAgICB9XG4gICk7XG59O1xuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XG4iXX0= */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/pages/index.tsx */\"));\n};\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Hacker News\"), __jsx(\"ul\", {\n    className: \"jsx-1989883731\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.articles.map(function (article) {\n    return __jsx(PostLink, {\n      post: article,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"1989883731\",\n    __self: this\n  }, \"h1.jsx-1989883731,a.jsx-1989883731{font-family:'Arial';}ul.jsx-1989883731{padding:0;}li.jsx-1989883731{list-style:none;margin:10px 0;}a.jsx-1989883731{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-1989883731:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL3BhZ2VzL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQ2tCLEFBSStCLEFBSVYsQUFJTSxBQUtLLEFBS1QsVUFiZCxFQWNBLElBVmdCLElBUmhCLFVBU0Esb0JBSWEsV0FDYiIsImZpbGUiOiIvVXNlcnMvZGFuaWVsY2VuZGVyL0RvY3VtZW50cy9HaXRIdWIvbmV4dC10cy9wYWdlcy9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IHsgTmV4dFBhZ2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IFBvc3RUeXBlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5jb25zdCBQb3N0TGluazogTmV4dFBhZ2U8eyBwb3N0OiBQb3N0VHlwZSB9PiA9ICh7IHBvc3QgfSkgPT4gKFxuICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICA8TGluayBocmVmPScvcC9baWRdJyBhcz17YC9wLyR7cG9zdC5pZH1gfT5cbiAgICAgIDxhPlxuICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAge3Bvc3QudGV4dCAmJiBgIC0gVGV4dCBFbWJlZGRlZGB9XG4gICAgICA8L2E+XG4gICAgPC9MaW5rPlxuICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICBsaSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogNXB4IDA7XG4gICAgICB9XG5cbiAgICAgIGEge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgIH1cblxuICAgICAgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gIDwvbGk+XG4pO1xuXG5jb25zdCBJbmRleDogTmV4dFBhZ2U8eyBhcnRpY2xlczogUG9zdFR5cGVbXSB9PiA9IHByb3BzID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGgxPkhhY2tlciBOZXdzPC9oMT5cbiAgICAgIDx1bD5cbiAgICAgICAge3Byb3BzLmFydGljbGVzLm1hcChhcnRpY2xlID0+IChcbiAgICAgICAgICA8UG9zdExpbmsgcG9zdD17YXJ0aWNsZX0gLz5cbiAgICAgICAgKSl9XG4gICAgICA8L3VsPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBoMSxcbiAgICAgICAgYSB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gICAgICAgIH1cblxuICAgICAgICB1bCB7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgYTpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2hhY2tlci1uZXdzLmZpcmViYXNlaW8uY29tL3YwL3RvcHN0b3JpZXMuanNvbj9wcmludD1wcmV0dHknKTtcblxuICBjb25zdCBkYXRhOiBzdHJpbmdbXSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgY29uc29sZS5sb2coZGF0YS5sZW5ndGgpO1xuXG4gIC8vIGdlbmVyaWMgZGVmaW5lcyB0aGUgcmVzdWx0aW5nIG9iamVjdCBmcm9tIHJlc29sdmVkIHByb21pc2VcbiAgY29uc3QgcG9zdHM6IFByb21pc2U8UG9zdFR5cGU+W10gPSBbXTtcblxuICBkYXRhLm1hcChpZCA9PlxuICAgIHBvc3RzLnB1c2goXG4gICAgICBmZXRjaChgaHR0cHM6Ly9oYWNrZXItbmV3cy5maXJlYmFzZWlvLmNvbS92MC9pdGVtLyR7aWR9Lmpzb24/cHJpbnQ9cHJldHR5YClcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuICAgIClcbiAgKTtcblxuICBjb25zdCByZXN1bHQ6IFBvc3RUeXBlW10gPSBhd2FpdCBQcm9taXNlLmFsbChwb3N0cyk7XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oXG4gICAge30sXG4gICAge1xuICAgICAgYXJ0aWNsZXM6IHJlc3VsdC5maWx0ZXIoZSA9PiB0eXBlb2YgZSA9PT0gJ29iamVjdCcpXG4gICAgfVxuICApO1xufTtcbmV4cG9ydCBkZWZhdWx0IEluZGV4O1xuIl19 */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/pages/index.tsx */\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data, posts, result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(data.length); // generic defines the resulting object from resolved promise\n\n          posts = [];\n          data.map(function (id) {\n            return posts.push(fetch(\"https://hacker-news.firebaseio.com/v0/item/\".concat(id, \".json?print=pretty\")).then(function (res) {\n              return res.json();\n            })[\"catch\"](function (e) {\n              return console.log(e);\n            }));\n          });\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(_Promise.all(posts));\n\n        case 11:\n          result = _context.sent;\n          return _context.abrupt(\"return\", _Object$assign({}, {\n            articles: result.filter(function (e) {\n              return typeof e === 'object';\n            })\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/pages/index.tsx"],"names":["Layout","Link","fetch","PostLink","post","id","title","text","Index","props","articles","map","article","getInitialProps","res","json","data","console","log","length","posts","push","then","e","all","result","filter"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAIA,IAAMC,QAAsC,GAAG,SAAzCA,QAAyC;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAC7C;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,KADR,EAEGF,IAAI,CAACG,IAAL,sBAFH,CADF,CADF;AAAA;AAAA;AAAA,m2GAD6C;AAAA,CAA/C;;AA2BA,IAAMC,KAAyC,GAAG,SAA5CA,KAA4C,CAAAC,KAAK,EAAI;AACzD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAA1B,CADH,CAFF;AAAA;AAAA;AAAA,s+GADF;AAkCD,CAnCD;;AAqCAJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJX,KAAK,CAAC,oEAAD,CADD;;AAAA;AAChBY,UAAAA,GADgB;AAAA;AAAA,2CAGOA,GAAG,CAACC,IAAJ,EAHP;;AAAA;AAGhBC,UAAAA,IAHgB;AAKtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB,EALsB,CAOtB;;AACMC,UAAAA,KARgB,GAQa,EARb;AAUtBJ,UAAAA,IAAI,CAACL,GAAL,CAAS,UAAAN,EAAE;AAAA,mBACTe,KAAK,CAACC,IAAN,CACEnB,KAAK,sDAA+CG,EAA/C,wBAAL,CACGiB,IADH,CACQ,UAAAR,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aADX,WAES,UAAAQ,CAAC;AAAA,qBAAIN,OAAO,CAACC,GAAR,CAAYK,CAAZ,CAAJ;AAAA,aAFV,CADF,CADS;AAAA,WAAX;AAVsB;AAAA,2CAkBW,SAAQC,GAAR,CAAYJ,KAAZ,CAlBX;;AAAA;AAkBhBK,UAAAA,MAlBgB;AAAA,2CAoBf,eACL,EADK,EAEL;AACEf,YAAAA,QAAQ,EAAEe,MAAM,CAACC,MAAP,CAAc,UAAAH,CAAC;AAAA,qBAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,aAAf;AADZ,WAFK,CApBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AA2BA,eAAef,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { NextPage } from 'next';\nimport { PostType } from '../types';\n\nconst PostLink: NextPage<{ post: PostType }> = ({ post }) => (\n  <li key={post.id}>\n    <Link href='/p/[id]' as={`/p/${post.id}`}>\n      <a>\n        {post.title}\n        {post.text && ` - Text Embedded`}\n      </a>\n    </Link>\n    <style jsx global>{`\n      li {\n        list-style: none;\n        margin: 5px 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: blue;\n        font-family: 'Arial';\n      }\n\n      a:hover {\n        opacity: 0.6;\n      }\n    `}</style>\n  </li>\n);\n\nconst Index: NextPage<{ articles: PostType[] }> = props => {\n  return (\n    <Layout>\n      <h1>Hacker News</h1>\n      <ul>\n        {props.articles.map(article => (\n          <PostLink post={article} />\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 10px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async () => {\n  const res = await fetch('https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty');\n\n  const data: string[] = await res.json();\n\n  console.log(data.length);\n\n  // generic defines the resulting object from resolved promise\n  const posts: Promise<PostType>[] = [];\n\n  data.map(id =>\n    posts.push(\n      fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n        .then(res => res.json())\n        .catch(e => console.log(e))\n    )\n  );\n\n  const result: PostType[] = await Promise.all(posts);\n\n  return Object.assign(\n    {},\n    {\n      articles: result.filter(e => typeof e === 'object')\n    }\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}