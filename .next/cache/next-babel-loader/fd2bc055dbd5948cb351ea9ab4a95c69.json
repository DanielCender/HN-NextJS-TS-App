{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Home = function Home(_ref) {\n  var userAgent = _ref.userAgent;\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1\n    },\n    __self: this\n  }, \"Hello World! - user agent: \", userAgent);\n};\n\nHome.getInitialProps = function _callee(_ref2) {\n  var req, userAgent;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req;\n          userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n          return _context.abrupt(\"return\", {\n            userAgent: userAgent\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/pages/index.tsx"],"names":["Home","userAgent","getInitialProps","req","headers","navigator"],"mappings":";;;;;;AAAA,IAAMA,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAgCA,SAAhC,CAAnB;AAAA,CAAb;;AAEAD,IAAI,CAACE,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AACfF,UAAAA,SADe,GACHE,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,YAAZ,CAAH,GAA+BC,SAAS,CAACJ,SADzC;AAAA,2CAEd;AACLA,YAAAA,SAAS,EAATA;AADK,WAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeD,IAAf","sourcesContent":["const Home = ({ userAgent }) => <h1>Hello World! - user agent: {userAgent}</h1>;\n\nHome.getInitialProps = async ({ req }) => {\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  return {\n    userAgent\n  };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}