{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useEffect, useState } from 'react';\n\nconst Comment = props => {\n  const {\n    commentId\n  } = props;\n  const {\n    0: comment,\n    1: setComment\n  } = useState(undefined);\n  const {\n    0: err,\n    1: setErr\n  } = useState(undefined);\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`).then(res => res.json()).then(res => setComment(res)).catch(e => setErr(e.message));\n  });\n\n  if (err) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Err message: \", err));\n  }\n\n  if (!comment) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"- Loading -\"));\n  }\n\n  return __jsx(\"li\", {\n    className: \"jsx-2515292747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"jsx-2515292747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, comment.by), __jsx(\"p\", {\n    className: \"jsx-2515292747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, comment.text), __jsx(_JSXStyle, {\n    id: \"2515292747\",\n    __self: this\n  }, \"div.jsx-2515292747{font-family:'Arial';}li.jsx-2515292747{list-style:none;margin:5px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQ29tbWVudC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMENrQixBQUcrQixBQUdKLGdCQUNILElBSGYsU0FJQSIsImZpbGUiOiIvVXNlcnMvZGFuaWVsY2VuZGVyL0RvY3VtZW50cy9HaXRIdWIvbmV4dC10cy9jb21wb25lbnRzL0NvbW1lbnQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgeyBDb21tZW50VHlwZSB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNvbW1lbnRJZDogbnVtYmVyO1xufTtcblxuY29uc3QgQ29tbWVudDogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gcHJvcHMgPT4ge1xuICBjb25zdCB7IGNvbW1lbnRJZCB9ID0gcHJvcHM7XG5cbiAgY29uc3QgW2NvbW1lbnQsIHNldENvbW1lbnRdID0gdXNlU3RhdGU8Q29tbWVudFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbiAgY29uc3QgW2Vyciwgc2V0RXJyXSA9IHVzZVN0YXRlPHN0cmluZyB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoKGBodHRwczovL2hhY2tlci1uZXdzLmZpcmViYXNlaW8uY29tL3YwL2l0ZW0vJHtjb21tZW50SWR9Lmpzb24/cHJpbnQ9cHJldHR5YClcbiAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgLnRoZW4ocmVzID0+IHNldENvbW1lbnQocmVzKSlcbiAgICAgIC5jYXRjaChlID0+IHNldEVycihlLm1lc3NhZ2UpKTtcbiAgfSk7XG5cbiAgaWYgKGVycikge1xuICAgIHJldHVybiAoXG4gICAgICA8bGk+XG4gICAgICAgIDxwPkVyciBtZXNzYWdlOiB7ZXJyfTwvcD5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfVxuXG4gIGlmICghY29tbWVudCkge1xuICAgIHJldHVybiAoXG4gICAgICA8bGk+XG4gICAgICAgIDxwPi0gTG9hZGluZyAtPC9wPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8bGk+XG4gICAgICA8aDQ+e2NvbW1lbnQuYnl9PC9oND5cbiAgICAgIDxwPntjb21tZW50LnRleHR9PC9wPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBkaXYge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG4gICAgICAgIGxpIHtcbiAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2xpPlxuICApO1xufTtcblxuLy8gQ29tbWVudC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjb21tZW50SWQgfSkgPT4ge1xuLy8gICBjb25zdCBpZCA9IGNvbW1lbnRJZDtcblxuLy8gICBjb25zdCBjb21tZW50ID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vaGFja2VyLW5ld3MuZmlyZWJhc2Vpby5jb20vdjAvaXRlbS8ke2lkfS5qc29uP3ByaW50PXByZXR0eWApXG4vLyAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4vLyAgICAgLmNhdGNoKGUgPT4gY29uc29sZS5sb2coZSkpO1xuXG4vLyAgIHJldHVybiBPYmplY3QuYXNzaWduKFxuLy8gICAgIHt9LFxuLy8gICAgIHtcbi8vICAgICAgIGNvbW1lbnRcbi8vICAgICB9XG4vLyAgICk7XG4vLyB9O1xuXG5leHBvcnQgZGVmYXVsdCBDb21tZW50O1xuIl19 */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx */\"));\n}; // Comment.getInitialProps = async ({ commentId }) => {\n//   const id = commentId;\n//   const comment = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n//     .then(res => res.json())\n//     .catch(e => console.log(e));\n//   return Object.assign(\n//     {},\n//     {\n//       comment\n//     }\n//   );\n// };\n\n\nexport default Comment;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx"],"names":["fetch","useEffect","useState","Comment","props","commentId","comment","setComment","undefined","err","setErr","then","res","json","catch","e","message","by","text"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAMA,MAAMC,OAAuC,GAAGC,KAAK,IAAI;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAM;AAAA,OAACE,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAA0BM,SAA1B,CAAtC;AAEA,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBR,QAAQ,CAAqBM,SAArB,CAA9B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAAE,8CAA6CK,SAAU,oBAAzD,CAAL,CACGM,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIL,UAAU,CAACK,GAAD,CAFzB,EAGGE,KAHH,CAGSC,CAAC,IAAIL,MAAM,CAACK,CAAC,CAACC,OAAH,CAHpB;AAID,GALQ,CAAT;;AAOA,MAAIP,GAAJ,EAAS;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBA,GAAjB,CADF,CADF;AAKD;;AAED,MAAI,CAACH,OAAL,EAAc;AACZ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACW,EAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,OAAO,CAACY,IAAZ,CAFF;AAAA;AAAA;AAAA,4iFADF;AAeD,CA7CD,C,CA+CA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAef,OAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { CommentType } from '../types';\nimport { useEffect, useState } from 'react';\n\ntype Props = {\n  commentId: number;\n};\n\nconst Comment: React.FunctionComponent<Props> = props => {\n  const { commentId } = props;\n\n  const [comment, setComment] = useState<CommentType | undefined>(undefined);\n\n  const [err, setErr] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`)\n      .then(res => res.json())\n      .then(res => setComment(res))\n      .catch(e => setErr(e.message));\n  });\n\n  if (err) {\n    return (\n      <li>\n        <p>Err message: {err}</p>\n      </li>\n    );\n  }\n\n  if (!comment) {\n    return (\n      <li>\n        <p>- Loading -</p>\n      </li>\n    );\n  }\n\n  return (\n    <li>\n      <h4>{comment.by}</h4>\n      <p>{comment.text}</p>\n      <style jsx>{`\n        div {\n          font-family: 'Arial';\n        }\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n      `}</style>\n    </li>\n  );\n};\n\n// Comment.getInitialProps = async ({ commentId }) => {\n//   const id = commentId;\n\n//   const comment = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n//     .then(res => res.json())\n//     .catch(e => console.log(e));\n\n//   return Object.assign(\n//     {},\n//     {\n//       comment\n//     }\n//   );\n// };\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}