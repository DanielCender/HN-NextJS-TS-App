{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/components/CommentSection.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Comment from './Comment';\nimport Collapsible from 'react-collapsible';\nvar triggerStyle = {\n  border: '1px solid orange',\n  color: 'grey',\n  padding: '10px',\n  fontFamily: 'Arial'\n};\n\nvar CommentSection = function CommentSection(props) {\n  console.log('CommentSection props: ', props);\n  var commentIDs = props.commentIDs,\n      collapsibleName = props.collapsibleName;\n  return __jsx(\"div\", {\n    className: \"jsx-4122646215\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Collapsible, {\n    trigger: \"View \".concat(collapsibleName || 'Comments'),\n    triggerWhenOpen: \"Close Comments\",\n    triggerStyle: triggerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"jsx-4122646215\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, commentIDs.map(function (el) {\n    return __jsx(Comment, {\n      commentId: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }))), __jsx(_JSXStyle, {\n    id: \"4122646215\",\n    __self: this\n  }, \"div.jsx-4122646215{padding:10px 0 10px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQ29tbWVudFNlY3Rpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStCa0IsQUFHaUMsc0JBQ3hCIiwiZmlsZSI6Ii9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQ29tbWVudFNlY3Rpb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbW1lbnQgZnJvbSAnLi9Db21tZW50JztcbmltcG9ydCBDb2xsYXBzaWJsZSBmcm9tICdyZWFjdC1jb2xsYXBzaWJsZSc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNvbW1lbnRJRHM6IG51bWJlcltdO1xuICBjb2xsYXBzaWJsZU5hbWU6IHN0cmluZztcbn07XG5cbmNvbnN0IHRyaWdnZXJTdHlsZSA9IHtcbiAgYm9yZGVyOiAnMXB4IHNvbGlkIG9yYW5nZScsXG4gIGNvbG9yOiAnZ3JleScsXG4gIHBhZGRpbmc6ICcxMHB4JyxcbiAgZm9udEZhbWlseTogJ0FyaWFsJ1xufTtcblxuY29uc3QgQ29tbWVudFNlY3Rpb246IFJlYWN0LkZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9IHByb3BzID0+IHtcbiAgY29uc29sZS5sb2coJ0NvbW1lbnRTZWN0aW9uIHByb3BzOiAnLCBwcm9wcyk7XG4gIGNvbnN0IHsgY29tbWVudElEcywgY29sbGFwc2libGVOYW1lIH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPENvbGxhcHNpYmxlXG4gICAgICAgIHRyaWdnZXI9e2BWaWV3ICR7Y29sbGFwc2libGVOYW1lIHx8ICdDb21tZW50cyd9YH1cbiAgICAgICAgdHJpZ2dlcldoZW5PcGVuPSdDbG9zZSBDb21tZW50cydcbiAgICAgICAgdHJpZ2dlclN0eWxlPXt0cmlnZ2VyU3R5bGV9XG4gICAgICA+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7Y29tbWVudElEcy5tYXAoZWwgPT4gKFxuICAgICAgICAgICAgPENvbW1lbnQgY29tbWVudElkPXtlbH0gLz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgIDwvQ29sbGFwc2libGU+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGRpdiB7XG4gICAgICAgICAgcGFkZGluZzogMTBweCAwIDEwcHggMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tbWVudFNlY3Rpb247XG4iXX0= */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/CommentSection.tsx */\"));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/components/CommentSection.tsx"],"names":["Comment","Collapsible","triggerStyle","border","color","padding","fontFamily","CommentSection","props","console","log","commentIDs","collapsibleName","map","el"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,kBADW;AAEnBC,EAAAA,KAAK,EAAE,MAFY;AAGnBC,EAAAA,OAAO,EAAE,MAHU;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAOA,IAAMC,cAA8C,GAAG,SAAjDA,cAAiD,CAAAC,KAAK,EAAI;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;AAD8D,MAEtDG,UAFsD,GAEtBH,KAFsB,CAEtDG,UAFsD;AAAA,MAE1CC,eAF0C,GAEtBJ,KAFsB,CAE1CI,eAF0C;AAG9D,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,OAAO,iBAAUA,eAAe,IAAI,UAA7B,CADT;AAEE,IAAA,eAAe,EAAC,gBAFlB;AAGE,IAAA,YAAY,EAAEV,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,UAAU,CAACE,GAAX,CAAe,UAAAC,EAAE;AAAA,WAChB,MAAC,OAAD;AAAS,MAAA,SAAS,EAAEA,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAjB,CADH,CALF,CADF;AAAA;AAAA;AAAA,iwDADF;AAoBD,CAvBD;;AAyBA,eAAeP,cAAf","sourcesContent":["import Comment from './Comment';\nimport Collapsible from 'react-collapsible';\n\ntype Props = {\n  commentIDs: number[];\n  collapsibleName: string;\n};\n\nconst triggerStyle = {\n  border: '1px solid orange',\n  color: 'grey',\n  padding: '10px',\n  fontFamily: 'Arial'\n};\n\nconst CommentSection: React.FunctionComponent<Props> = props => {\n  console.log('CommentSection props: ', props);\n  const { commentIDs, collapsibleName } = props;\n  return (\n    <div>\n      <Collapsible\n        trigger={`View ${collapsibleName || 'Comments'}`}\n        triggerWhenOpen='Close Comments'\n        triggerStyle={triggerStyle}\n      >\n        <ul>\n          {commentIDs.map(el => (\n            <Comment commentId={el} />\n          ))}\n        </ul>\n      </Collapsible>\n      <style jsx>{`\n        div {\n          padding: 10px 0 10px 0;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}