{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown/with-html';\nimport CommentSection from './CommentSection';\n\nvar Comment = function Comment(props) {\n  var commentId = props.commentId;\n\n  var _useState = useState(undefined),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(undefined),\n      err = _useState2[0],\n      setErr = _useState2[1];\n\n  useEffect(function () {\n    fetch(\"https://hacker-news.firebaseio.com/v0/item/\".concat(commentId, \".json?print=pretty\")).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return setComment(res);\n    })[\"catch\"](function (e) {\n      return setErr(e.message);\n    });\n  });\n\n  if (err) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Err message: \", err));\n  }\n\n  if (!comment) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"- Loading -\"));\n  }\n\n  return __jsx(\"li\", {\n    className: \"jsx-2220560704\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"jsx-2220560704\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, comment.by), __jsx(Markdown, {\n    source: comment.text,\n    escapeHtml: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), (comment.kids || []).length > 0 && __jsx(CommentSection, {\n    collapsibleName: \"Replies\",\n    commentIDs: comment.kids,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"hr\", {\n    className: \"jsx-2220560704\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"2220560704\",\n    __self: this\n  }, \"div.jsx-2220560704,h4.jsx-2220560704,p.jsx-2220560704{font-family:'Arial';}li.jsx-2220560704{list-style:none;margin:5px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL2NvbXBvbmVudHMvQ29tbWVudC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0RrQixBQUsrQixBQUdKLGdCQUNILElBSGYsU0FJQSIsImZpbGUiOiIvVXNlcnMvZGFuaWVsY2VuZGVyL0RvY3VtZW50cy9HaXRIdWIvbmV4dC10cy9jb21wb25lbnRzL0NvbW1lbnQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IHsgQ29tbWVudFR5cGUgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgTWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24vd2l0aC1odG1sJztcbmltcG9ydCBDb21tZW50U2VjdGlvbiBmcm9tICcuL0NvbW1lbnRTZWN0aW9uJztcblxudHlwZSBQcm9wcyA9IHtcbiAgY29tbWVudElkOiBudW1iZXI7XG59O1xuXG5jb25zdCBDb21tZW50OiBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHsgY29tbWVudElkIH0gPSBwcm9wcztcblxuICBjb25zdCBbY29tbWVudCwgc2V0Q29tbWVudF0gPSB1c2VTdGF0ZTxDb21tZW50VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuICBjb25zdCBbZXJyLCBzZXRFcnJdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2goYGh0dHBzOi8vaGFja2VyLW5ld3MuZmlyZWJhc2Vpby5jb20vdjAvaXRlbS8ke2NvbW1lbnRJZH0uanNvbj9wcmludD1wcmV0dHlgKVxuICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAudGhlbihyZXMgPT4gc2V0Q29tbWVudChyZXMpKVxuICAgICAgLmNhdGNoKGUgPT4gc2V0RXJyKGUubWVzc2FnZSkpO1xuICB9KTtcblxuICBpZiAoZXJyKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxsaT5cbiAgICAgICAgPHA+RXJyIG1lc3NhZ2U6IHtlcnJ9PC9wPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG5cbiAgaWYgKCFjb21tZW50KSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxsaT5cbiAgICAgICAgPHA+LSBMb2FkaW5nIC08L3A+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxsaT5cbiAgICAgIDxoND57Y29tbWVudC5ieX08L2g0PlxuICAgICAgPE1hcmtkb3duIHNvdXJjZT17Y29tbWVudC50ZXh0fSBlc2NhcGVIdG1sPXtmYWxzZX0gLz5cbiAgICAgIHsoY29tbWVudC5raWRzIHx8IFtdKS5sZW5ndGggPiAwICYmIChcbiAgICAgICAgPENvbW1lbnRTZWN0aW9uIGNvbGxhcHNpYmxlTmFtZT0nUmVwbGllcycgY29tbWVudElEcz17Y29tbWVudC5raWRzfSAvPlxuICAgICAgKX1cbiAgICAgIDxociAvPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBkaXYsXG4gICAgICAgIGg0LFxuICAgICAgICBwIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDVweCAwO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9saT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbW1lbnQ7XG4iXX0= */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx */\"));\n};\n\nexport default Comment;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/components/Comment.tsx"],"names":["useEffect","useState","fetch","Markdown","CommentSection","Comment","props","commentId","undefined","comment","setComment","err","setErr","then","res","json","e","message","by","text","kids","length"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAMA,IAAMC,OAAuC,GAAG,SAA1CA,OAA0C,CAAAC,KAAK,EAAI;AAAA,MAC/CC,SAD+C,GACjCD,KADiC,CAC/CC,SAD+C;;AAAA,kBAGzBN,QAAQ,CAA0BO,SAA1B,CAHiB;AAAA,MAGhDC,OAHgD;AAAA,MAGvCC,UAHuC;;AAAA,mBAKjCT,QAAQ,CAAqBO,SAArB,CALyB;AAAA,MAKhDG,GALgD;AAAA,MAK3CC,MAL2C;;AAOvDZ,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,KAAK,sDAA+CK,SAA/C,wBAAL,CACGM,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,UAAU,CAACI,GAAD,CAAd;AAAA,KAFX,WAGS,UAAAE,CAAC;AAAA,aAAIJ,MAAM,CAACI,CAAC,CAACC,OAAH,CAAV;AAAA,KAHV;AAID,GALQ,CAAT;;AAOA,MAAIN,GAAJ,EAAS;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBA,GAAjB,CADF,CADF;AAKD;;AAED,MAAI,CAACF,OAAL,EAAc;AACZ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACS,EAAb,CADF,EAEE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAET,OAAO,CAACU,IAA1B;AAAgC,IAAA,UAAU,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAACV,OAAO,CAACW,IAAR,IAAgB,EAAjB,EAAqBC,MAArB,GAA8B,CAA9B,IACC,MAAC,cAAD;AAAgB,IAAA,eAAe,EAAC,SAAhC;AAA0C,IAAA,UAAU,EAAEZ,OAAO,CAACW,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF;AAAA;AAAA;AAAA,ugFADF;AAqBD,CAnDD;;AAqDA,eAAef,OAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { CommentType } from '../types';\nimport Markdown from 'react-markdown/with-html';\nimport CommentSection from './CommentSection';\n\ntype Props = {\n  commentId: number;\n};\n\nconst Comment: React.FunctionComponent<Props> = props => {\n  const { commentId } = props;\n\n  const [comment, setComment] = useState<CommentType | undefined>(undefined);\n\n  const [err, setErr] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`)\n      .then(res => res.json())\n      .then(res => setComment(res))\n      .catch(e => setErr(e.message));\n  });\n\n  if (err) {\n    return (\n      <li>\n        <p>Err message: {err}</p>\n      </li>\n    );\n  }\n\n  if (!comment) {\n    return (\n      <li>\n        <p>- Loading -</p>\n      </li>\n    );\n  }\n\n  return (\n    <li>\n      <h4>{comment.by}</h4>\n      <Markdown source={comment.text} escapeHtml={false} />\n      {(comment.kids || []).length > 0 && (\n        <CommentSection collapsibleName='Replies' commentIDs={comment.kids} />\n      )}\n      <hr />\n      <style jsx>{`\n        div,\n        h4,\n        p {\n          font-family: 'Arial';\n        }\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n      `}</style>\n    </li>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}