{"ast":null,"code":"var _jsxFileName = \"/Users/danielcender/Documents/GitHub/next-ts/pages/about.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport Layout from '../components/MyLayout';\n\nconst About = () => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"jsx-1974216584\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"About\"), __jsx(\"h4\", {\n    className: \"jsx-1974216584\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Hacker News Mock API, bootstrapped together with\", ' ', __jsx(\"a\", {\n    href: \"https://nextjs.org\",\n    target: \"_blank\",\n    className: \"jsx-1974216584\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Next.js\")), __jsx(Markdown, {\n    source: `\n# Next-TS\n\n## Description\n\nThis project is a mixture of basic concepts around using TypeScript on top of NextJS and some simple API interaction.\n\nThe HackerNews API is incredibly simple and easy to get started with; check it out [here](https://github.com/HackerNews/API).\n\n\n\n\t\t\t`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"1974216584\",\n    __self: this\n  }, \"h2.jsx-1974216584,h4.jsx-1974216584,a.jsx-1974216584{font-family:'Arial';}.markdown.jsx-1974216584{font-family:'Arial';}.markdown.jsx-1974216584 a.jsx-1974216584{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown.jsx-1974216584 a.jsx-1974216584:hover{opacity:0.6;}.markdown.jsx-1974216584 h3.jsx-1974216584{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxjZW5kZXIvRG9jdW1lbnRzL0dpdEh1Yi9uZXh0LXRzL3BhZ2VzL2Fib3V0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2QmtCLEFBSytCLEFBSUEsQUFJQyxBQUtULEFBSUgsU0FDQyxHQUpaLE9BSzJCLENBbEIzQixBQUlBLHdCQWVBLE1BWGEsV0FDYiIsImZpbGUiOiIvVXNlcnMvZGFuaWVsY2VuZGVyL0RvY3VtZW50cy9HaXRIdWIvbmV4dC10cy9wYWdlcy9hYm91dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5pbXBvcnQgeyBOZXh0UGFnZSB9IGZyb20gJ25leHQnO1xuXG5jb25zdCBBYm91dDogTmV4dFBhZ2UgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxoMj5BYm91dDwvaDI+XG4gICAgICA8aDQ+XG4gICAgICAgIEhhY2tlciBOZXdzIE1vY2sgQVBJLCBib290c3RyYXBwZWQgdG9nZXRoZXIgd2l0aHsnICd9XG4gICAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV4dGpzLm9yZycgdGFyZ2V0PSdfYmxhbmsnPlxuICAgICAgICAgIE5leHQuanNcbiAgICAgICAgPC9hPlxuICAgICAgPC9oND5cbiAgICAgIDxNYXJrZG93blxuICAgICAgICBzb3VyY2U9e2BcbiMgTmV4dC1UU1xuXG4jIyBEZXNjcmlwdGlvblxuXG5UaGlzIHByb2plY3QgaXMgYSBtaXh0dXJlIG9mIGJhc2ljIGNvbmNlcHRzIGFyb3VuZCB1c2luZyBUeXBlU2NyaXB0IG9uIHRvcCBvZiBOZXh0SlMgYW5kIHNvbWUgc2ltcGxlIEFQSSBpbnRlcmFjdGlvbi5cblxuVGhlIEhhY2tlck5ld3MgQVBJIGlzIGluY3JlZGlibHkgc2ltcGxlIGFuZCBlYXN5IHRvIGdldCBzdGFydGVkIHdpdGg7IGNoZWNrIGl0IG91dCBbaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL0hhY2tlck5ld3MvQVBJKS5cblxuXG5cblx0XHRcdGB9XG4gICAgICAvPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBoMixcbiAgICAgICAgaDQsXG4gICAgICAgIGEge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gYTpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBYm91dDtcbiJdfQ== */\\n/*@ sourceURL=/Users/danielcender/Documents/GitHub/next-ts/pages/about.tsx */\"));\n};\n\nexport default About;","map":{"version":3,"sources":["/Users/danielcender/Documents/GitHub/next-ts/pages/about.tsx"],"names":["React","Markdown","Layout","About"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,MAAMC,KAAe,GAAG,MAAM;AAC5B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACmD,GADnD,EAEE;AAAG,IAAA,IAAI,EAAC,oBAAR;AAA6B,IAAA,MAAM,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAFF,EAQE,MAAC,QAAD;AACE,IAAA,MAAM,EAAG;;;;;;;;;;;IADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF;AAAA;AAAA;AAAA,siFADF;AAmDD,CApDD;;AAsDA,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport Markdown from 'react-markdown';\nimport Layout from '../components/MyLayout';\nimport { NextPage } from 'next';\n\nconst About: NextPage = () => {\n  return (\n    <Layout>\n      <h2>About</h2>\n      <h4>\n        Hacker News Mock API, bootstrapped together with{' '}\n        <a href='https://nextjs.org' target='_blank'>\n          Next.js\n        </a>\n      </h4>\n      <Markdown\n        source={`\n# Next-TS\n\n## Description\n\nThis project is a mixture of basic concepts around using TypeScript on top of NextJS and some simple API interaction.\n\nThe HackerNews API is incredibly simple and easy to get started with; check it out [here](https://github.com/HackerNews/API).\n\n\n\n\t\t\t`}\n      />\n      <style jsx>{`\n        h2,\n        h4,\n        a {\n          font-family: 'Arial';\n        }\n\n        .markdown {\n          font-family: 'Arial';\n        }\n\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}